import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import confusion_matrix, classification_report

# Load the dataset
df = pd.read_csv('iris.csv')

# Split the dataset into features (X) and target variable (y)
X = df.drop('species', axis=1)
y = df['species']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the Na√Øve Bayes model
model = GaussianNB()
model.fit(X_train, y_train)

# Make predictions on the testing set
y_pred = model.predict(X_test)

# Compute the confusion matrix
cm = confusion_matrix(y_test, y_pred)

# Compute other evaluation metrics
accuracy = (cm[0, 0] + cm[1, 1] + cm[2, 2]) / cm.sum()
error_rate = 1 - accuracy
precision = cm[1, 1] / (cm[0, 1] + cm[1, 1] + cm[2, 1])
recall = cm[1, 1] / (cm[1, 0] + cm[1, 1] + cm[1, 2])

# Print the confusion matrix and evaluation metrics
print("Confusion Matrix:")
print(cm)
print("\nAccuracy:", accuracy)
print("Error Rate:", error_rate)
print("Precision:", precision)
print("Recall:", recall)
